#include <IRremote.h>  // include ir remote library

int inPin = 2;         // Switch
int outPin = 3;        // the number of the output pin
int RECV_PIN = 4;      // ir sensor

int state = HIGH;      // the current state of the output pin
int reading;           // the current reading from the input pin
int previous = LOW;    // the previous reading from the input pin

// the follow variables are long's because the time, measured in miliseconds,
// will quickly become a bigger number than can be stored in an int.
long time = 0;         // the last time the output pin was toggled
long debounce = 200;   // the debounce time, increase if the output flickers

IRrecv irrecv(RECV_PIN);
decode_results results;


void setup()
{
  Serial.begin(9600);
  // inputs
  pinMode(inPin, INPUT);
  
  // outputs
  pinMode(outPin, OUTPUT);
  pinMode(13, OUTPUT);
  
  // intialize ir sensor
  Serial.println("Enabling IRin");
  irrecv.enableIRIn(); // Start the receiver
  Serial.println("Enabled IRin");
}

void loop()
{
  reading = digitalRead(inPin);

  // if the input just went from LOW and HIGH and we've waited long enough
  // to ignore any noise on the circuit, toggle the output pin and remember
  // the time
  if (reading == HIGH && previous == LOW && millis() - time > debounce) {
    if (state == HIGH)
      state = LOW;
    else
      state = HIGH;

    time = millis();    
  }

  // code for ir
  if (irrecv.decode(&results)) {
    Serial.println(results.value, DEC);
    if (results.value == 16580863){
      if (state == HIGH) {
      	state = LOW;
      } else {
      	state = HIGH;
      }
    }
    irrecv.resume(); // Receive thxt value
  }
  
  digitalWrite(outPin, state);
  digitalWrite(13, state);
  
  Serial.println(state);
  
  previous = reading;
}